package dev.imptovskii.aeflite.events;

import dev.imptovskii.aeflite.Main;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerItemConsumeEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;

import java.util.HashMap;
import java.util.Map;

public class MultiTask implements Listener {
    private final Map<Player, Long> players = new HashMap<>();
    private final Main plugin;

    public MultiTask(Main plugin) {
        this.plugin = plugin;
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true) public void onPlayerItemConsume(PlayerItemConsumeEvent event) {
        if (!plugin.getConfig().getBoolean("MultiTaskPatch")) return;
        if (event.getItem().getType().isEdible()) {
            players.computeIfPresent(event.getPlayer(), ((player, last) -> {
                if (System.currentTimeMillis() - last <= plugin.getConfig().getLong("MultiTaskDelay")) {
                    event.setCancelled(true);
                }
                return last;
            }));
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true) public void onPlayerInteract(PlayerInteractEvent event) {
        if (event.getAction() == Action.RIGHT_CLICK_BLOCK && event.getItem() != null &&
                (event.getItem().getType() == Material.END_CRYSTAL || !plugin.getConfig().getBoolean("MultiTaskOnlyCrystals"))) {
            players.computeIfPresent(event.getPlayer(), (p, v) -> System.currentTimeMillis());
        }
    }

    @EventHandler(ignoreCancelled = true) public void onPlayerJoin(PlayerJoinEvent event) {
        players.put(event.getPlayer(), -1L);
    }

    @EventHandler(ignoreCancelled = true) public void onPlayerQuit(PlayerQuitEvent event) {
        players.remove(event.getPlayer());
    }

}
